{"version":3,"sources":["Components/Filter/filter.module.css","Components/Form/Form.js","Components/Filter/filter.js","Components/Contacts/Contact.js","Components/Contacts/ContactList.js","App.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","Form","state","name","number","resetFormInput","setState","handleInputChange","e","currentTarget","value","onSbmit","preventDefault","props","onFormSubmit","this","className","s","form","onSubmit","label","input","type","onChange","pattern","title","required","btn","Component","Filter","onFilterInputChange","filter","Contact","takeId","deleteContact","id","contacts","map","onClick","ContactList","removeContact","App","addContact","contact","shortid","generate","prevState","resetFilterInput","isNameInList","find","toLowerCase","alert","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedContact","visibleContacts","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b75f6cbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__AC2NC\"};","import { Component } from \"react\"\r\nimport s from '../Form/Form.module.css'\r\n\r\n\r\nclass Form extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    resetFormInput = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    });\r\n  };\r\n\r\n    handleInputChange = (e) => {\r\n        const name = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onSbmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onFormSubmit(this.state.name, this.state.number);\r\n        this.resetFormInput();\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state\r\n        const { handleInputChange } = this\r\n        \r\n        return (\r\n            <form className={s.form} onSubmit={this.onSbmit}>\r\n                <label className={s.label}>Name\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={s.label}>Number\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleInputChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        />\r\n                </label>\r\n                <button className={s.btn} type=\"submit\" >Add contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\nexport default Form","import { Component } from \"react\";\r\nimport s from '../Filter/filter.module.css'\r\n\r\nclass Filter extends Component {\r\n\r\n    handleInputChange = (e) => {\r\n        this.props.onFilterInputChange(e.currentTarget.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <label>\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={this.props.filter}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n            </label>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Filter","import { Component } from \"react\"\r\n\r\nclass Contact extends Component {\r\n\r\n    takeId = (e) => {\r\n        this.props.deleteContact(e.currentTarget.id)\r\n    };\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        const { takeId } = this\r\n        return (\r\n            contacts.map(({ name, number, id }) =>\r\n                <li key={id}>{name}: {number} <button type='button' id={id} onClick={takeId}>Delete</button></li>)\r\n        );\r\n    };\r\n};\r\n\r\nexport default Contact","import { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nclass ContactList extends Component {\r\n\r\n    deleteContact = (id) => {\r\n        this.props.removeContact(id)\r\n    };\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        const { deleteContact } = this\r\n\r\n        return (\r\n        <ul>\r\n           <Contact deleteContact={deleteContact} contacts={contacts} />\r\n        </ul>\r\n        );\r\n    };\r\n};\r\nexport default ContactList","import { Component } from 'react';\nimport './App.css';\nimport Form from './Components/Form/Form'\nimport Filter from './Components/Filter/filter'\nimport ContactList from './Components/Contacts/ContactList';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number\n    }\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact]\n    }));\n\n  };\n  \n  removeContact = (id) => {\n    this.setState(prevState => {\n      const newContacts = prevState.contacts.filter(contact => contact.id !== id)\n      return { contacts: newContacts }\n    })\n  };\n\n  onFilterInputChange = (value) => {\n    this.setState(\n      { filter: value }\n    )\n  };\n\n  resetFilterInput = () => {\n    this.setState({\n      filter: ''\n    });\n  };\n\n  isNameInList = (name) => this.state.contacts.find(contact =>\n      contact.name.toLowerCase() === name.toLowerCase());\n\n  onFormSubmit = (name, number) => {\n    if (this.isNameInList(name)) {\n      this.resetFilterInput()\n      return alert(`${name} is already in contacts`)\n    };\n    this.addContact(name, number);\n    this.resetFilterInput()\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n    this.setState({\n      contacts: parsedContacts\n    })\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n\n  render() {\n    const { contacts, filter } = this.state\n    const {onFormSubmit, onFilterInputChange, removeContact} = this\n\n\n    const normalizedContact = filter.toLowerCase();\n    const visibleContacts = contacts.filter(\n      contact => contact.name.toLowerCase().includes(normalizedContact));\n    \n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onFormSubmit={onFormSubmit} />\n        <h2>Contacts</h2>\n        <Filter onFilterInputChange={ onFilterInputChange } filter={filter} />\n        <ContactList contacts={visibleContacts} removeContact={ removeContact }/>\n      </>\n    )\n  };\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1pVd9\",\"btn\":\"Form_btn__pHZyp\",\"label\":\"Form_label__eXZPN\",\"input\":\"Form_input__1c78X\"};"],"sourceRoot":""}